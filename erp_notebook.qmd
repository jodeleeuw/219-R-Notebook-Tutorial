---
title: "An ERP study on metaphorical language processing"
author: "Josh de Leeuw"
format: 
  html:
    df-print: kable
editor: visual
---

```{r}
#| echo: false
#| label: Load R libraries
#| warning: false
#| message: false

library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
```

```{r}
#| label: grab the data files
#| echo: false
#| include: false
 
osf_retrieve_node("62qf4") %>%
  osf_ls_files() %>%
  osf_download(path="data/", conflicts="skip")

```

## Introduction

This is a study about metaphor using ERP methods.

## Methods

```{r}
#| echo: false
#| message: false
#| label: Load behavioral data

behavioral.data <- read_csv('data/behavioral_data_tidy.csv')

```

```{r}
#| echo: false
#| label: Count number of subjects

n.subjects <- behavioral.data %>% pull(Subject) %>% unique() %>% length()
```

### Participants

`r n.subjects` Vassar students participated in this study.

### Procedure

Read sentences. Record brainwaves.

### EEG Recordings

Put electrodes on head. Voltages go brrrrrrr.

## Results

### Behavior

```{r}
#| label: Summarize behavioral data
#| message: false
#| echo: false

behavioral.summary <- behavioral.data %>%
  mutate(PercentCorrect = CorrectResponses/29 * 100) %>%
  group_by(Condition) %>%
  summarize(M = mean(PercentCorrect), SD = sd(PercentCorrect))

```

We checked for comprehension accuracy of the sentences by asking participants whether a given sentence made sense. For literal and metaphorical sentences, the answer was always yes, and for anomalous sentences the answer was always no. Participants said the sentences made sense more in the literal (*M* = `r behavioral.summary %>% filter(Condition == "Literal") %>% pull(M) %>% round(2)`%, *SD* = `r behavioral.summary %>% filter(Condition == "Literal") %>% pull(SD) %>% round(2)`%) condition than in the metaphorical condition (*M* = `r behavioral.summary %>% filter(Condition == "Metaphorical") %>% pull(M) %>% round(2)`%, *SD* = `r behavioral.summary %>% filter(Condition == "Metaphorical") %>% pull(SD) %>% round(2)`%), suggesting that the metaphorical meanings were slightly more difficult to understand (see @fig-behavioral-accuracy ). Participants correctly identified the anomalous sentences as being not sensible (*M* = `r behavioral.summary %>% filter(Condition == "Anomalous") %>% pull(M) %>% round(2)`%, *SD* = `r behavioral.summary %>% filter(Condition == "Anomalous") %>% pull(SD) %>% round(2)`%) at a similar level to the literal sentences.

```{r}
#| label: fig-behavioral-accuracy
#| fig-cap: The number of correct responses to the sensibility judgments was slightly lower for metaphorical sentences.
#| echo: false

ggplot(behavioral.data, aes(x=Condition, y=CorrectResponses, color=Condition))+
  geom_jitter(width=0.25, height = 0, size=2)+
  scale_color_hue(guide="none")+
  labs(x="Sentence Type", y="Number of Correct Responses\n(out of 29)")+
  theme_bw()
```

### ERP

We measured the amplitude of the ERP in the 300-500ms window at four electrode sites: F3, Fz, F4, and Cz. @fig-erp shows the grand average wave forms.

```{r}
#| label: Load EEG data
#| echo: false
#| message: false

eeg.data <- read_csv('data/voltage_data_tidy.csv')
```

```{r}
#| label: Define ERP electrodes and window
#| echo: false

target.electrodes <- c(11,24,124,129)
target.window <- 300:500
```

```{r}
#| label: Calculate grand average ERPs
#| echo: false
#| message: false

grand.average.erp <- eeg.data %>%
  group_by(t, electrode, condition) %>%
  filter(electrode %in% target.electrodes) %>%
  summarize(m = mean(voltage), se = sd(voltage)/sqrt(n()))
```

```{r}
#| label: fig-erp
#| fig-cap: Grand Average ERPs for the four target electrodes (Fz, F3, F4, Cz). The shaded window represents the target time window for our analysis of the N4 ERP component.
#| echo: false

grand.average.erp <- grand.average.erp %>%
  ungroup() %>%
  mutate(electrode.name = case_when(
    electrode == 11 ~ "Fz",
    electrode == 24 ~ "F3",
    electrode == 124 ~ "F4",
    electrode == 129 ~ "Cz",
    .default = as.character(electrode)
  ))

ggplot(grand.average.erp, aes(x=t, y=m, ymin=m-se, ymax=m+se, color=condition, fill=condition))+
  facet_wrap(vars(electrode.name))+
  geom_vline(xintercept = 0)+
  geom_hline(yintercept = 0)+
  annotate("rect", fill="black", alpha=0.1, xmin=min(target.window),xmax=max(target.window), ymin=-5, ymax=5)+
  labs(x="Time relative to stimulus onset (ms)", y="Mean voltage (microvolts)")+
  geom_line()+
  geom_ribbon(color=NA, alpha=0.3)+
  scale_y_reverse()+
  theme_minimal()+
  theme(panel.grid = element_blank())

```

#### Is there a difference in N400 for different sentence types?

To see if the amplitude of the N400 differed by sentence type, we ran a 3 (sentence type) x 4 (electrode site) repeated-measures ANOVA. As shown in @tbl-anova, there was a main effect of electrode, but no effect of sentence type.

```{r}
#| label: calculate anova data
#| echo: false
#| message: false
erp.anova.data <- eeg.data %>%
  filter(t %in% target.window, electrode %in% target.electrodes) %>%
  group_by(subject, condition, electrode) %>%
  mutate(electrode = factor(electrode),
         subject = factor(subject),
         condition = factor(condition)) %>%
  summarize(mean.subject.amplitude = mean(voltage))
```

```{r}
#| label: tbl-anova
#| tbl-cap: Repeated measures ANOVA analysis of mean amplitude in the 300-500ms window post-stimulus onset.
#| echo: false

erp.anova <- ezANOVA(erp.anova.data, dv=mean.subject.amplitude, within=c(condition, electrode), wid=subject)

erp.anova$ANOVA
```

#### Is there a standard N400 of literal v. anomalous?

```{r}
#| label: Follow up t-test example
#| echo: false
#| message: false

erp.data.t.test <- erp.anova.data %>%
  group_by(subject, condition) %>%
  filter(condition %in% c("Literal", "Anomalous")) %>%
  summarize(M = mean(mean.subject.amplitude))

erp.t.test <- t.test(M ~ condition, data=erp.data.t.test, paired=T)
```

To check for the standard N400 effect, we average across all electrode sites and compared the amplitude for literal and anomalous sentences using a paired t-test. There was no significant effect of sentence type, *t*(`r erp.t.test$parameter`) = `r erp.t.test$statistic`, *p* = `r erp.t.test$p.value`.
